class GildedRose {
    Item[] items;

    public GildedRose(Item[] items) {
        this.items = items;
    }

    public void incerementIfQualityLessThan(Item i , int quality , int points){
        if(i.quality< quality) i.incrementQuality(points);
    }
    public void decrementIfQualityGreaterThan(Item i , int quality, int points){
        if(i.quality > quality) i.decrementQuality(points);
    }
    public void isBackstagePass(Item i) {
        if (i.compareName("Backstage passes to a TAFKAL80ETC concert")){
            if ( i.sellIn < 0 ) i.setQuality(0);
            else if ( i.sellIn < 6 ) incerementIfLessThanQuality(i,50,1);
            else if ( i.sellIn < 11) i.incerementIfLessThanQuality(i,50,1);   
        }
    }

    public void isAgedBrie(Item i ) { 
        if (i.comapreName("Aged Brie") )  incrementIfQualityLessThan(i, 50 ,1 ); 
    }

    public void isNotSulfuras(Item i ) {
        if (!i.compareName("Sulfuras, Hand of Ragnaros") ) i.decrementSellIn(1);
    }

    public void notAnyName(Item i ) {
        if(
            !i.compareName("Backstage passes to a TAFKAL80ETC concert")  && 
            !i.comapreName("Aged Brie") && 
            !i.compareName("Sulfuras, Hand of Ragnaros") 
        ) 
            decrementIfQualityGreaterThan(i, 0 ,1 ); 
    }




    public void updateBasedOnName(Item i){
        isAgedBrie(i); 
        isBackstagePass(i);
        isNotSulfuras(i);
        notAnyName(i); 
    }

    public void updateBasedOnNameAndQuality(Item i){
        updateBasedOnName(i);
        else
        {
            i.incrementifLessThanQuality(i, 50, 1);
            isBackstagePass(i);
        }   

    }
    public void updateBasedOnSellIn(Item i) {
        if (i.sellIn < 0) {
            updateBasedOnName(i); 
        }
    }

    public void updateQuality() {
        for (int i = 0; i < items.length; i++) {
            updateBasedOnNameAndQuality(Item[i]);
            updateBasedOnSellIn(Item[i]);
        }
    }
}
